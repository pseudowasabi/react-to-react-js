{"version":3,"sources":["Film.js","App.js","index.js"],"names":["Film","title","year","summary","rating","coverimg","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","films","getFilms","a","axios","get","movies","data","setState","this","film","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUA+BeA,MA1Bf,YAAyE,IAAlDC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,KAAcC,GAA4B,EAApCC,OAAoC,EAA5BD,SAASE,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,OAE7D,OAAQ,yBAAKC,UAAU,QACrB,yBAAKC,IAAKH,EAAUI,IAAKR,EAAOA,MAAOA,IACvC,yBAAKM,UAAU,cACb,wBAAIA,UAAU,eAAeN,GAC7B,wBAAIM,UAAU,cAAcL,GAC5B,wBAAIK,UAAU,gBACXD,EAAOI,KAAI,SAACC,EAAOC,GACjB,OAAQ,wBAAIC,IAAKD,EAAOL,UAAU,iBAAiBI,OAExD,uBAAGJ,UAAU,iBAAiBJ,EAAQW,MAAM,EAAG,KAA/C,UCyCSC,G,kNAnDbC,MAAQ,CACNC,WAAW,EACXC,MAAO,I,EAETC,S,sBAAW,8BAAAC,EAAA,sEAE8BC,IAAMC,IAAI,4DAFxC,gBAEYC,EAFZ,EAEFC,KAAOA,KAAOD,OAErB,EAAKE,SAAS,CAACP,MAAOK,EAAQN,WAAW,IAJhC,2C,4KAgBTS,KAAKP,W,qIAEG,IAAD,EACoBO,KAAKV,MAAzBC,EADA,EACAA,UAAWC,EADX,EACWA,MAClB,OACE,6BAASX,UAAU,aAChBU,EACC,yBAAKV,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,SACZW,EAAMR,KACL,SAAAiB,GAEE,OAAS,kBAAC,EAAD,CACPd,IAAKc,EAAKC,GACVA,GAAID,EAAKC,GACT3B,MAAO0B,EAAK1B,MACZC,KAAMyB,EAAKzB,KACXE,OAAQuB,EAAKvB,OACbD,QAASwB,EAAKxB,QACdE,SAAUsB,EAAKE,mBACfvB,OAAQqB,EAAKrB,kB,GA5CbwB,IAAMC,YCDxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.35672189.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Film.css';\r\n\r\n// state를 필요로 하지 않는 경우 class 대신 function component 이용\r\nfunction Film({/*id,*/ title, year, rating, summary, coverimg, genres}) {\r\n  //return <h4>{title}</h4>;\r\n  return (<div className=\"film\">\r\n    <img src={coverimg} alt={title} title={title} />\r\n    <div className=\"film__data\">\r\n      <h3 className=\"film__title\">{title}</h3>\r\n      <h5 className=\"film__year\">{year}</h5>\r\n      <ul className=\"film__genres\">\r\n        {genres.map((genre, index) => \r\n          {return (<li key={index} className=\"genres__genre\">{genre}</li>);})}\r\n      </ul>\r\n      <p className=\"film__summary\">{summary.slice(0, 180)}...</p>\r\n    </div>\r\n  </div>);\r\n}\r\n\r\nFilm.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  coverimg: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Film;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Film from './Film';\r\nimport './App.css'\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    films: []\r\n  }\r\n  getFilms = async () => {\r\n    //const films = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\r\n    const {data: {data: {movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n    //console.log(movies);\r\n    this.setState({films: movies, isLoading: false });\r\n    //console.log(this.state.films);\r\n  }\r\n  async componentDidMount() {\r\n    // 여기에서 data를 fetch\r\n    /*setTimeout(() => {\r\n      this.setState({ isLoading: false })\r\n    }, 3000);*/\r\n\r\n    // data를 fetch하는 방법에는, fetch() method도 있지만, axios()를 주로 사용할 예정\r\n    // yts-proxy.now.sh/list_movie.json\r\n    \r\n    this.getFilms();\r\n  }\r\n  render() {\r\n    const {isLoading, films} = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading...</span>\r\n          </div> )\r\n        : (\r\n          <div className=\"films\">\r\n            {films.map(\r\n              film => {\r\n                //console.log(film);\r\n                return ( <Film \r\n                  key={film.id}\r\n                  id={film.id} \r\n                  title={film.title} \r\n                  year={film.year} \r\n                  rating={film.rating} \r\n                  summary={film.summary} \r\n                  coverimg={film.medium_cover_image} \r\n                  genres={film.genres} /> )\r\n              })}\r\n          </div>\r\n        )}\r\n      </section> )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// App Component에서 Life Cycle 함수인 componentWillUnmount() 함수의 동작을 확인하기 위한 코드\r\n/*\r\nfunction timeOutFunction() {\r\n  ReactDOM.render(\"- End -\", document.getElementById('root'));\r\n}\r\nsetTimeout(timeOutFunction, 5000);*/"],"sourceRoot":""}